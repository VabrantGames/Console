apply plugin: 'java-library'
apply plugin: 'maven-publish'

eclipse.project.name = rootProject.name + '-console'

//ext {
//    testClassName = "com.vabrant.console.ConsoleTestApplication"
//    artifactId = "console"
//}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava {
    options.incremental = true
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "$version"

jar {
    archiveBaseName.set(name)
    manifest {
        attributes 'Implementation-Title': name, 'Implementation-Version': archiveVersion
    }
}

dependencies {
    api "com.badlogicgames.gdx:gdx:$gdxVersion"

    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
    testImplementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
}

// Disable JDK 8's doclint
// http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            // The -quiet is because of some sort of weird JDK JavaCompiler bug:
            // https://discuss.gradle.org/t/passing-arguments-to-compiler-and-javadoc/1661
            options.addStringOption('Xdoclint:none,-missing', '-quiet')
        }
    }
}

afterEvaluate {
    java {
        withSourcesJar()
        withJavadocJar()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId this.group
                artifactId this.name
                version this.version
                from components.java
            }
        }
    }
}

//task runTest(dependsOn: classes, type: JavaExec) {
//    main = project.ext.testClassName
//    classpath = sourceSets.main.runtimeClasspath += sourceSets.test.runtimeClasspath
//    workingDir = project.file("src/test/resources").path
//    standardInput = System.in
//    ignoreExitValue = true
//}

test {
    useJUnitPlatform()
}